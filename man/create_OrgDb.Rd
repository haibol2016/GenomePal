% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_OrgDb.R
\name{create_OrgDb}
\alias{create_OrgDb}
\title{Create an OrgDb package}
\usage{
create_OrgDb(
  geneID_symbol,
  id_type = c("GENEID", "ENSEMBL"),
  goTable = NULL,
  outDir = ".",
  tax_id = "9606",
  genus = "Homo",
  species = "sapeins",
  version = "0.1",
  maintainer = "Some One <so@someplace.org>",
  author = "Some One <so@someplace.org>"
)
}
\arguments{
\item{geneID_symbol}{A data frame with two columns named "gene_id" and
"symbol"}

\item{id_type}{A character(1), specifying the type of gene identifiers in
the \code{geneID_symbol} data frame. It should be "GENEID" for NCBI Entrz gene
identifiers, such as '8359'  or "ENSEMBL" for Ensembl gene identifiers
such as 'ENSG00000196176'.}

\item{goTable}{By default, this is NULL, but if one of your '...'
  data.frames has GO annotations, then this name will be the name of
  that argument.  When you specify this, \code{makeOrgPackage} will
  process that data.frame to remove extra GO terms (that are too new for
  the current GO.db) and also will generate a table for GOALL data
  (based on ancestor terms for each mapping from GO.db) and for each
  ontology.  This table will also be checked to make sure that it has
  exactly THREE columns, that must be named GID, GO and EVIDENCE.  These
  must correspond to the gene IDs, GO IDs and evidence codes
  respectively.  GO IDs should be formatted like this to work with other
  DBs in the project: \\'GO:XXXXXXX\\'. }

\item{outDir}{A character(1), specifying a path where the package source
should be assembled.}

\item{tax_id}{The Taxonomy ID that represents your organism.  (NCBI has
  a nice online browser for finding the one you need)}

\item{genus}{Single string indicating the genus.}

\item{species}{Single string indicating the species.}

\item{version}{What is the version number for this package? format: \\'x.y.z\\'}

\item{maintainer}{Who is the package maintainer? (must include email to be 
    valid)}

\item{author}{Who is the creator of this package?}
}
\value{
A character(1), the name of and OrgDb package.
}
\description{
Create an OrgDb package based on a data frame containing \verb{gene ID} and
\verb{gene symbol}.
}
\examples{
gtf <- system.file("extdata", "example.gtf.gz",
                   package = "GenomePal",
                   mustWork = TRUE)
geneID_symbol <- get_geneID_symbol(gtf = gtf, unique_symbol = TRUE)
outDir <- tempdir()
files <- dir(outDir, pattern = "org.*.eg.*",
             full.name = TRUE)
if (length(files) >= 1) {
    unlink(files, force = TRUE, recursive = TRUE)
}
try(OrgDb <- create_OrgDb(geneID_symbol,
                      id_type = "ENSEMBL",
                      outDir = outDir))
}
